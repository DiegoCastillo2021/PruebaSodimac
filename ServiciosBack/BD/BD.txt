CREATE DATABASE CAR_CENTER
GO
USE CAR_CENTER
GO

CREATE TABLE CTG_CATALOGO
(
	CTG_ID INT IDENTITY PRIMARY KEY,
	CTG_DESCRIPCION VARCHAR(250) NOT NULL,
	CTG_ESTADO CHAR
)

GO

CREATE TABLE VLC_VALOR_CATALOGO
(
	VLC_ID INT IDENTITY PRIMARY KEY,
	VLC_DESCRIPCION VARCHAR(50) NOT NULL,
	VLC_VALOR VARCHAR(250),
	CTG_ID INT FOREIGN KEY (CTG_ID) REFERENCES CTG_CATALOGO (CTG_ID)
)

GO

CREATE TABLE CLN_CLIENTE
(
	CLN_ID INT IDENTITY (1,1),
	CLN_TIPO_DOCUMENTO INT FOREIGN KEY (CLN_TIPO_DOCUMENTO) REFERENCES VLC_VALOR_CATALOGO (VLC_ID),
	CLN_NUMERO_DOCUMENTO VARCHAR(20) PRIMARY KEY,
	CLN_PRIMER_NOMBRE VARCHAR(50) NOT NULL,
	CLN_SEGUNDO_NOMBRE VARCHAR(50),
	CLN_PRIMER_APELLIDO VARCHAR(50) NOT NULL,
	CLN_SEGUNDO_APELLIDO VARCHAR(50),
	CLN_CELULAR NUMERIC(10) NOT NULL,
	CLN_DIRECCION VARCHAR(200) NOT NULL,
	CLN_EMAIL VARCHAR(100) NOT NULL,
	CLN_ESTADO INT FOREIGN KEY (CLN_ESTADO) REFERENCES VLC_VALOR_CATALOGO (VLC_ID)
);

GO

CREATE TABLE VHE_VEHICULO
(
	VHE_ID INT IDENTITY (1,1),
	VHE_PLACA VARCHAR(8) PRIMARY KEY,
	VHE_SERIAL_CHASIS VARCHAR(50) NOT NULL,
	VHE_SERIAL_MOTOR VARCHAR(50) NOT NULL,
	VHE_MARCA INT FOREIGN KEY (VHE_MARCA) REFERENCES VLC_VALOR_CATALOGO (VLC_ID),
	VHE_MODELO INT FOREIGN KEY (VHE_MODELO) REFERENCES VLC_VALOR_CATALOGO (VLC_ID),
	VHE_ESTADO_FISICO INT FOREIGN KEY (VHE_ESTADO_FISICO) REFERENCES VLC_VALOR_CATALOGO (VLC_ID),
	VHE_DESCRIPCION_ESTADO VARCHAR(MAX) NOT NULL,
	VHE_ESTADO INT FOREIGN KEY (VHE_ESTADO) REFERENCES VLC_VALOR_CATALOGO (VLC_ID),
	VHE_PROPIETARIO VARCHAR(20) FOREIGN KEY (VHE_PROPIETARIO) REFERENCES CLN_CLIENTE (CLN_NUMERO_DOCUMENTO)
);

GO

CREATE TABLE TDN_TIENDA
(
	TDN_ID INT PRIMARY KEY IDENTITY (1,1),
	TND_NOMBRE VARCHAR(50) NOT NULL,
	TND_DIRECCION VARCHAR(50) NOT NULL,
	TND_TELEFONO NUMERIC(10) NOT NULL,
	TND_ESTADO INT FOREIGN KEY (TND_ESTADO) REFERENCES VLC_VALOR_CATALOGO (VLC_ID)
)

GO

CREATE TABLE EMP_EMPLEADO
(
	EMP_ID INT IDENTITY (1,1),
	EMP_TIPO_DOCUMENTO INT FOREIGN KEY (EMP_TIPO_DOCUMENTO) REFERENCES VLC_VALOR_CATALOGO (VLC_ID),
	EMP_NUMERO_DOCUMENTO VARCHAR(20) PRIMARY KEY,
	EMP_PRIMER_NOMBRE VARCHAR(50) NOT NULL,
	EMP_SEGUNDO_NOMBRE VARCHAR(50),
	EMP_PRIMER_APELLIDO VARCHAR(50) NOT NULL,
	EMP_SEGUNDO_APELLIDO VARCHAR(50),
	EMP_CELULAR NUMERIC(10) NOT NULL,
	EMP_DIRECCION VARCHAR(200) NOT NULL,
	EMP_EMAIL VARCHAR(100) NOT NULL,
	EMP_ESTADO INT FOREIGN KEY (EMP_ESTADO) REFERENCES VLC_VALOR_CATALOGO (VLC_ID),
	EMP_ID_TIENDA INT FOREIGN KEY (EMP_ID_TIENDA) REFERENCES TDN_TIENDA (TDN_ID)
);

GO

CREATE TABLE MTN_MANTENIMIENTO
(
	MTN_ID INT IDENTITY (1,1) PRIMARY KEY,
	MTN_FECHA_ENTRADA DATETIME NOT NULL,
	MTN_FECHA_SALIDA DATETIME NOT NULL,
	MTN_VEHICULO VARCHAR(8) FOREIGN KEY (MTN_VEHICULO) REFERENCES VHE_VEHICULO (VHE_PLACA),
	MTN_PRESUPUESTO NUMERIC (12,2),
	MTN_ESTADO INT FOREIGN KEY (MTN_ESTADO) REFERENCES VLC_VALOR_CATALOGO (VLC_ID),
	MTN_TECNICO VARCHAR(20) FOREIGN KEY (MTN_TECNICO) REFERENCES EMP_EMPLEADO (EMP_NUMERO_DOCUMENTO)
);

GO

CREATE TABLE RPT_REPUESTO
(
	RPT_ID INT IDENTITY (1,1),
	RPT_SERIAL VARCHAR(20) PRIMARY KEY,
	RPT_NOMBRE VARCHAR(100) NOT NULL,
	RPT_DESCRIPCION VARCHAR(500) NOT NULL,
	RPT_PRECIO_UND NUMERIC(10,2) NOT NULL,
	RPT_UNIDADES INT NOT NULL,
	RPT_PORC_DESCUENTO NUMERIC (4,2) NOT NULL
);

GO

CREATE TABLE SRV_SERVICIO
(
	SRV_ID INT IDENTITY (1,1) PRIMARY KEY,
	SRV_NOMBRE VARCHAR(100) NOT NULL,
	SRV_DESCRIPCION VARCHAR(500) NOT NULL,
	SRV_VALOR_MINIMO NUMERIC (10,2) NOT NULL,
	SRV_VALOR_MAXIMO NUMERIC (10,2) NOT NULL,
	SRV_DESCUENTO NUMERIC (4,2) NOT NULL
);

GO

CREATE TABLE FAC_FACTURA
(
	FAC_ID INT IDENTITY (1,1) PRIMARY KEY,
	FAC_ID_TIENDA INT FOREIGN KEY (FAC_ID_TIENDA) REFERENCES TDN_TIENDA (TDN_ID),
	FAC_FECHA_REGISTRO DATETIME NOT NULL,
	FAC_ID_MTN INT FOREIGN KEY (FAC_ID_MTN) REFERENCES MTN_MANTENIMIENTO (MTN_ID),
	FAC_ESTADO INT FOREIGN KEY (FAC_ESTADO) REFERENCES VLC_VALOR_CATALOGO (VLC_ID),
	FAC_SUBTOTAL NUMERIC (12,2) NOT NULL,
	FAC_IMPUESTO NUMERIC (10,2) NOT NULL,
	FAC_TOTAL NUMERIC (12,2) NOT NULL
)

GO

CREATE TABLE DTL_DETALLE_MANTENIMIENTO_RPT
(
	DTL_ID INT IDENTITY (1,1) PRIMARY KEY,
	DTL_ID_MTN INT FOREIGN KEY (DTL_ID_MTN) REFERENCES MTN_MANTENIMIENTO (MTN_ID),
	DTL_ID_REPUESTO VARCHAR(20) FOREIGN KEY (DTL_ID_REPUESTO) REFERENCES RPT_REPUESTO (RPT_SERIAL),
	DTL_CANTIDAD_RPT INT NOT NULL,
	DTL_ESTADO INT FOREIGN KEY (DTL_ESTADO) REFERENCES VLC_VALOR_CATALOGO (VLC_ID)
);

GO

CREATE TABLE DTL_DETALLE_MANTENIMIENTO_SRV
(
	DTL_ID INT IDENTITY (1,1) PRIMARY KEY,
	DTL_ID_MTN INT FOREIGN KEY (DTL_ID_MTN) REFERENCES MTN_MANTENIMIENTO (MTN_ID),
	DTL_ID_SERVICIO INT FOREIGN KEY (DTL_ID_SERVICIO) REFERENCES SRV_SERVICIO (SRV_ID),
	DTL_CANTIDAD_SRV INT NOT NULL,
	DTL_ESTADO INT FOREIGN KEY (DTL_ESTADO) REFERENCES VLC_VALOR_CATALOGO (VLC_ID),
	DTL_TECNICO VARCHAR(20) FOREIGN KEY (DTL_TECNICO) REFERENCES EMP_EMPLEADO (EMP_NUMERO_DOCUMENTO)
);

GO

CREATE TABLE DTL_DETALLE_FACTURA_RPT
(
	DTL_ID_FACTURA INT FOREIGN KEY (DTL_ID_FACTURA) REFERENCES FAC_FACTURA (FAC_ID),
	DTL_DETALLE_RPT INT NOT NULL,
	DTL_DESCUENTO_RPT NUMERIC (4,2),
	DTL_VALOR NUMERIC (12,2) NOT NULL
);

GO

CREATE TABLE DTL_DETALLE_FACTURA_SRV
(
	DTL_ID_FACTURA INT FOREIGN KEY (DTL_ID_FACTURA) REFERENCES FAC_FACTURA (FAC_ID),
	DTL_DETALLE_SRV INT NOT NULL,
	DTL_DESCUENTO_SRV NUMERIC (4,2),
	DTL_VALOR NUMERIC (12,2) NOT NULL
);

/*****************************************************************************************
Llenado de las tablas con información base para pruebas
*****************************************************************************************/

INSERT INTO CTG_CATALOGO VALUES ('Catalogo Tipos de Documento', 1);
INSERT INTO CTG_CATALOGO VALUES ('Catalogo Estado Cliente', 1);
INSERT INTO CTG_CATALOGO VALUES ('Catalogo Estado Empleado', 1);
INSERT INTO CTG_CATALOGO VALUES ('Catalogo Estado Vehiculo', 1);
INSERT INTO CTG_CATALOGO VALUES ('Catalogo Estado Estructural Vehiculo', 1);
INSERT INTO CTG_CATALOGO VALUES ('Catalogo Estado Mantenimiento', 1);
INSERT INTO CTG_CATALOGO VALUES ('Catalogo Estado Factura', 1);
INSERT INTO CTG_CATALOGO VALUES ('Catalogo Marca Vehiculo', 1);
INSERT INTO CTG_CATALOGO VALUES ('Catalogo Modelo Vehiculo', 1);
INSERT INTO CTG_CATALOGO VALUES ('Catalogo Estado tienda', 1)


INSERT INTO VLC_VALOR_CATALOGO VALUES ('Cedula de Ciudadania', 'CC', 1);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Cedula de Extranjeria', 'CE', 1);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Pasaporte', 'PA', 1);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Carnet Diplomatico', 'CD', 1);


INSERT INTO VLC_VALOR_CATALOGO VALUES ('Cliente Activo', 'Activo', 2);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Cliente Inactivo', 'Inactivo', 2);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Cliente Sancionado', 'Sanción', 2);


INSERT INTO VLC_VALOR_CATALOGO VALUES ('Empleado Activo', 'Activo', 3);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Empleado Inactivo', 'Inactivo', 3);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Empleado Sancionado', 'Sanción', 3);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Empleado Retirado', 'Retiro', 3);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Empleado Incapacitado', 'Incapacidad', 3);


INSERT INTO VLC_VALOR_CATALOGO VALUES ('Vehiculo Activo', 'Activo', 4);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Vehiculo Inactivo', 'Inactivo', 4);


INSERT INTO VLC_VALOR_CATALOGO VALUES ('Vehiculo es excelente estado', 'Excelente', 5);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Vehiculo en buen estado', 'Bueno', 5);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Vehiculo en regular estado', 'Regular', 5);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Vehiculo en mal estado', 'Mal', 5);


INSERT INTO VLC_VALOR_CATALOGO VALUES ('Mantenimiento Terminado', 'Terminado', 6);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Mantenimiento En Proceso', 'En Proceso', 6);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Mantenimiento En Espera', 'Espera', 6);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Mantenimiento Iniciado', 'Iniciado', 6);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Mantenimiento Registrado', 'Registrado', 6);


INSERT INTO VLC_VALOR_CATALOGO VALUES ('Factura Terminada', 'Terminada', 7);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Factura En Proceso', 'En proceso', 7);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Factura Iniciada', 'Iniciada', 7);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Factura Anulada', 'Anulada', 7);


INSERT INTO VLC_VALOR_CATALOGO VALUES ('Toyota Motor Company', 'Toyota', 8);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Mazda Motor Company', 'Mazda', 8);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('General Motor Company', 'Chevrolet', 8);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Renault Motor Company', 'Renault', 8);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Grupo Volkswagen Motor Company', 'Volkswagen', 8);


INSERT INTO VLC_VALOR_CATALOGO VALUES ('Wagon 5 Puertas, automatico, full equipo, 4x4', 'TX', 9);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Wagon 5 Puertas, automatico, full equipo, 4x4', 'CX9', 9);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Wagon 5 Puertas, automatico, full equipo, 4x2', 'Captiva Premier', 9);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Sedan 5 Puertas, automatico, full equipo, 4x2', 'Logan', 9);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Coupe 5 Puertas, automatico, full equipo, 4x2', 'Gol GTI', 9);


INSERT INTO VLC_VALOR_CATALOGO VALUES ('Tienda Activa', 'Activa', 10);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Tienda Cerrada', 'Cerrada', 10);
INSERT INTO VLC_VALOR_CATALOGO VALUES ('Tienda en Obra', 'Obra', 10);


INSERT INTO CLN_CLIENTE VALUES (1, '1010216560', 'Juan', 'Carlos', 'Vargas', 'Peres', 3153151315, 'Carrera 29c # 79 - 58', 'die.vis.cas@gmail.com', 5);

INSERT INTO VHE_VEHICULO VALUES ('HCS335', 'K015453XS', 'K025453XS', 27, 32, 15, 'Vehiculo semi nuevo, no presenta golpes ni afectaciones mecanicas visibles, accesorios completos', 13, '1010216560');

INSERT INTO TDN_TIENDA VALUES ('Calle 127', 'Av Calle 127 # 45 - 50', 6966766, 38);
INSERT INTO TDN_TIENDA VALUES ('Calle 26', 'Av Calle 26 # 68 - 72', 3383838, 38)

INSERT INTO EMP_EMPLEADO VALUES (1, '1030688301', 'Jhonatan', 'Javier', 'Rozo', 'Pedraza', 3118574787, 'Carrera 60 # 72a - 68', 'lajorito@gmail.com', 8, 1);
INSERT INTO EMP_EMPLEADO VALUES (1, '1032946176', 'Angie', 'Melisa', 'Guerrero', 'Rincon', 3205054665, 'Calle 75a # 61 - 43', 'saidaiwa@gmail.com', 8, 2);


INSERT INTO RPT_REPUESTO VALUES ('982398423', 'Rotula Superior Izquiera', 'Rotula superior para toyota TX modelos 2015-2020', 250000, 5, 8);
INSERT INTO RPT_REPUESTO VALUES ('TKFP57943', 'Tijera Inferior Derecha', 'Tijera Inferior para mazda CX9 modelos 2015-2022', 450000, 3, 11);
INSERT INTO RPT_REPUESTO VALUES ('ACE8594912', '1/4 Mobil 1 - 5W30', 'Aceite para motores a gasolina', 50000, 50, 2);


INSERT INTO SRV_SERVICIO VALUES ('Balanceo Dinamico', 'Balanceo dinamico de llantas para obtener el equilibrio entre el peso de la llanta y el rin', 8000, 15000, 2);
INSERT INTO SRV_SERVICIO VALUES ('Rectificacion de Rines', 'Rectificar la circunferencia del rin mediante un proceso de calor y ajuste', 15000, 35000, 4);
INSERT INTO SRV_SERVICIO VALUES ('Alineación de Dirección', 'Alineación computarizada con el fin de ajustar las medidas de ejes y dirección para el manejo del vehiculo', 30000, 55000, 2);
INSERT INTO SRV_SERVICIO VALUES ('Cambio de Aceite', 'Cambio de aceite, filtro y fluidos en una ventana de tiempo entre 5000 y 20000 kilometros', 40000, 60000, 5);


INSERT INTO MTN_MANTENIMIENTO VALUES (GETDATE(), DATEADD(DAY, 10, GETDATE()), 'HCS335', 2000000, 23, '1030688301');
INSERT INTO DTL_DETALLE_MANTENIMIENTO_RPT VALUES (1, 'ACE8594912', 4, 22);
INSERT INTO DTL_DETALLE_MANTENIMIENTO_SRV VALUES (1, 4, 1, 22, '1030688301');


INSERT INTO FAC_FACTURA VALUES (1, GETDATE(), 1, 26, 0, 0, 0);
INSERT INTO DTL_DETALLE_FACTURA_RPT VALUES (1, 1, 2, 196000);
INSERT INTO DTL_DETALLE_FACTURA_SRV VALUES (1, 1, 5, 50000);
UPDATE FAC_FACTURA SET FAC_SUBTOTAL = 246000, FAC_IMPUESTO = 196000*0.05;
UPDATE FAC_FACTURA SET FAC_TOTAL = FAC_SUBTOTAL + FAC_IMPUESTO


/*****************************************************************************************
Codigo de las consultas solicitadas
*****************************************************************************************/

SELECT A.CLN_NUMERO_DOCUMENTO, A.CLN_PRIMER_NOMBRE, A.CLN_PRIMER_APELLIDO, SUM(D.FAC_TOTAL) AS MONTO FROM CLN_CLIENTE A
INNER JOIN VHE_VEHICULO B ON A.CLN_NUMERO_DOCUMENTO = B.VHE_PROPIETARIO
INNER JOIN MTN_MANTENIMIENTO C ON B.VHE_PLACA = C.MTN_VEHICULO
INNER JOIN FAC_FACTURA D ON C.MTN_ID = D.FAC_ID_MTN
WHERE D.FAC_FECHA_REGISTRO BETWEEN DATEADD(DAY, -60, GETDATE()) AND GETDATE()
GROUP BY A.CLN_NUMERO_DOCUMENTO, A.CLN_PRIMER_NOMBRE, A.CLN_PRIMER_APELLIDO
HAVING SUM(D.FAC_TOTAL) = 100000;


SELECT TOP 100 COUNT(*) CANTIDAD, A.RPT_NOMBRE FROM RPT_REPUESTO A
INNER JOIN DTL_DETALLE_MANTENIMIENTO_RPT B ON A.RPT_SERIAL = B.DTL_ID_REPUESTO
INNER JOIN MTN_MANTENIMIENTO C ON B.DTL_ID_MTN = C.MTN_ID
INNER JOIN FAC_FACTURA D ON C.MTN_ID = D.FAC_ID_MTN AND D.FAC_FECHA_REGISTRO BETWEEN DATEADD(DAY, -30, GETDATE()) AND GETDATE() AND D.FAC_ESTADO = 24 -- 24 -> ES ESTADO TERMINADO EN LA FACTURA
GROUP BY A.RPT_NOMBRE
ORDER BY COUNT(*) DESC;


SELECT A.*, D.DTL_CANTIDAD_RPT, E.RPT_SERIAL, E.RPT_NOMBRE FROM TDN_TIENDA A
INNER JOIN FAC_FACTURA B ON A.TDN_ID = B.FAC_ID_TIENDA
INNER JOIN MTN_MANTENIMIENTO C ON B.FAC_ID_MTN = C.MTN_ID
INNER JOIN DTL_DETALLE_MANTENIMIENTO_RPT D ON C.MTN_ID = D.DTL_ID_MTN AND D.DTL_CANTIDAD_RPT > 100
INNER JOIN RPT_REPUESTO E ON D.DTL_ID_REPUESTO = E.RPT_SERIAL AND E.RPT_ID = 100
WHERE B.FAC_FECHA_REGISTRO BETWEEN DATEADD(DAY, -60, GETDATE()) AND GETDATE()


SELECT COUNT(C.MTN_ID) AS CANTIDAD_MANTENIMIENTOS, A.CLN_NUMERO_DOCUMENTO, A.CLN_PRIMER_NOMBRE, A.CLN_PRIMER_APELLIDO FROM CLN_CLIENTE A
INNER JOIN VHE_VEHICULO B ON A.CLN_NUMERO_DOCUMENTO = B.VHE_PROPIETARIO
INNER JOIN MTN_MANTENIMIENTO C ON B.VHE_PLACA = C.MTN_VEHICULO
WHERE C.MTN_FECHA_ENTRADA BETWEEN DATEADD(DAY, -30, GETDATE()) AND GETDATE()
GROUP BY A.CLN_NUMERO_DOCUMENTO, A.CLN_PRIMER_NOMBRE, A.CLN_PRIMER_APELLIDO
HAVING COUNT(*) > 1;


/*****************************************************************************************
Procedimiento almacenado solicitado
*****************************************************************************************/

CREATE PROCEDURE CAR_CONTROL_INVENTARIO
@SERIAL_REPUESTO VARCHAR(20),
@CANTIDAD INT,
@ID_FACTURA INT
AS
BEGIN

	DECLARE @CODIGO_ERROR VARCHAR(4)
	DECLARE @RESPUESTA VARCHAR(50)
	DECLARE @CONT INT = 0

	SELECT @CONT = COUNT(*) FROM FAC_FACTURA A
	INNER JOIN MTN_MANTENIMIENTO B ON A.FAC_ID_MTN = B.MTN_ID
	INNER JOIN DTL_DETALLE_MANTENIMIENTO_RPT C ON B.MTN_ID = C.DTL_ID_MTN
	WHERE C.DTL_ID_REPUESTO = @SERIAL_REPUESTO AND A.FAC_ID = @ID_FACTURA AND A.FAC_ESTADO = 24;
	PRINT @CONT
	IF (@CONT >= 1)
	BEGIN
		
		UPDATE RPT_REPUESTO SET RPT_UNIDADES = RPT_UNIDADES - @CANTIDAD WHERE RPT_SERIAL = @SERIAL_REPUESTO

		SET @CODIGO_ERROR = '0000'
		SET @RESPUESTA = 'OPERACION EXITOSA'

	END
	ELSE
	BEGIN
		
		SET @CODIGO_ERROR = '9999'
		SET @RESPUESTA = 'ERROR, NO SE ENCONTRO REGISTRO DE VENTA PARA LA FACTURA Y PRODUCTO INGRESADO'

	END

	SELECT @CODIGO_ERROR, @RESPUESTA

END